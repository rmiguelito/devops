---
apiVersion: v1
kind: Service
metadata:
  name: redis
  labels:
    app: redis
spec:
  ports:
  - name: redis
    port: 6379
  selector:
    app: redis
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  labels:
    app: redis
spec:
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: redis
              topologyKey: kubernetes.io/hostname
            weight: 1
      containers:
      - name: redis
        image: docker.io/redis:6
        imagePullPolicy: Always
        args: [ 'redis-server', '--maxmemory', '2Gb', '--maxmemory-policy', 'allkeys-lru', '--maxclients', '3000', '--appendonly', 'yes' ]
        ports:
        - name: redis
          containerPort: 6379
        livenessProbe:
          initialDelaySeconds: 10
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 6
          exec:
            command: [ /usr/bin/timeout, -s, SIGQUIT, 3s, /usr/local/bin/redis-cli, ping ]
        readinessProbe:
          initialDelaySeconds: 10
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 2
          exec:
            command: [ /usr/bin/timeout, -s, SIGQUIT, 3s, /usr/local/bin/redis-cli, ping ]
        startupProbe:
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 10
          exec:
            command: [ /usr/bin/timeout, -s, SIGQUIT, 3s, /usr/local/bin/redis-cli, ping ]
        resources:
          limits:
            cpu: 2000m
            memory: 4Gi
          requests:
            cpu: 50m
            memory: 2Gi
        volumeMounts:
        - name: redis-data
          mountPath: /data
      volumes:
      - name: redis-data
        emptyDir: {}
